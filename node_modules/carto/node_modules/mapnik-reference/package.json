{
  "author": {
    "name": "Mapnik Developers"
  },
  "name": "mapnik-reference",
  "description": "Reference for Mapnik Styling Options",
  "version": "5.0.7",
  "repository": {
    "type": "git",
    "url": "git://github.com/mapnik/mapnik-reference.git"
  },
  "engines": {
    "node": "*"
  },
  "readme": "# mapnik-reference\n\n`mapnik-reference` is a parse-able spec of what Mapnik can do - what main structures\nit supports (like layers, styles, and symbolizers) and the properties they can contain.\nIt's useful for building parsers, tests, compilers, and syntax highlighting/checking for languages.\n\n## Versioning\n\nThe version of this repository indicates the schema of the reference.json file.\nSchema changes of any type are expected to change the implementation requirements\nof a parser, so they will increment the major version of this repository in\n[semver style](http://semver.org/).\n\nThe directories in this repository directly correspond to released versions of Mapnik\nand the next targeted release of Mapnik. The latest reference, usually targeted\ntoward a pre-release, is copied into `/latest` for convenience.\n\n## Meaning\n\nThe structure of the file is as such:\n\n* `version`: the version of Mapnik targeted. Same as the containing directory.\n* `style`: properties of the `Style` XML element\n* `layer`: properties of the `Layer` XML element\n* `symbolizers/*`: properties that apply to **all** symbolizers\n* `symbolizers/symbolizer`: properties that apply to **each** type of symbolizer\n* `colors`: named colors supported by Mapnik. see `include/mapnik/css_color_grammar.hpp`\n\n## Using\n\nThis is a valid [npm](http://npmjs.org/) module and therefore can easily be used with\n[node.js](http://nodejs.org/).\n\n    npm install mapnik-reference\n\nOnce installing it as a dependency (like it's used in Carto), it can be included\nand used for a specific version of Mapnik:\n\n```javascript\nvar mapnik_reference = require('mapnik-reference');\nvar data = mapnik_reference.version['2.1.0'];\n```\n\nOther implementations will want to simply copy the [JSON](http://www.json.org/) file\nfrom the desired implementation, like `2.0.1/reference.json`. For python we could consider\nuploading to pypi if there is interest.\n\nThe file can then be parsed with any of the many [json parsers](http://www.json.org/).\n\n## Testing\n\nTests require python:\n\n    make test\n\n## Users\n\n* [carto.js](https://github.com/mapbox/carto)\n* Mapnik itself (the util/validate-mapnik-instance.py is used to check binding consistency like in [#1427](https://github.com/mapnik/mapnik/issues/1427))\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mapnik/mapnik-reference/issues"
  },
  "homepage": "https://github.com/mapnik/mapnik-reference",
  "_id": "mapnik-reference@5.0.7",
  "_from": "mapnik-reference@~5.0.7"
}
